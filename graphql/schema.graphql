scalar Upload

type User {
  id: Int!
  userId: String!
  nickname: String
  passwordHash: String
  role: String!
  token: String
}

type Movie {
  id: Int!
  title: String!
}

type File {
  id: Int!
  filename: String!
  ai_worked: Boolean!
  worked: Boolean!
  checked: Boolean!

  work_assigned: Boolean!
  check_assigned: Boolean!

  worker: String!
  checker: String!
}

type Project {
  id: Int!
  project_name: String!
  project_content: String!
  start_date: String!
  end_date: String!
  project_type: String!,
  amount: Int!,
}

input fileInput {
  filename: String!
}

input projectInput {
  project_name: String!
  project_content: String!
  start_date: String!
  end_date: String!
  project_type: String!
  amount: Int!
}

input movieInput {
  title: String!
}

input movieDelete {
  id: Int!
}

type Query {
  users: [User!]!
  user: User!
  movies: [Movie]!
  files: [File]!
  projects: [Project!]!
  worker_files: [File]!

  createtests: Boolean
}

type Mutation {
  signUp(userId: String!, nickname: String!, password: String!): Boolean!
  login(userId: String!, password: String!): User
  logout: Boolean!

  addFile(data: fileInput): File!

  addProject(data: projectInput): Boolean!
  addMovie(data: movieInput): Movie!
  deleteMovie(data: movieDelete): Boolean!
  uploadFile(file: Upload!): Boolean!
}
